#!/usr/bin/env bash

####### Configure environment

set -o errexit    # always exit on error
set -o errtrace   # trap errors in functions as well
set -o pipefail   # dont ignore exit codes when piping output
set -o posix      # more strict failures in subshells
# set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(cd $(dirname $0); cd ..; pwd)
heroku_dir=$build_dir/.heroku
mkdir -p $heroku_dir/node
warnings=$(mktemp)
build_env=${EMBER_ENV:-production}

# Load dependencies
source $bp_dir/lib/common.sh
source $bp_dir/lib/build.sh
source $bp_dir/lib/warnings.sh

# Avoid GIT_DIR leak from previous build steps
unset GIT_DIR

# Provide hook to deal with errors
trap build_failed ERR

####### Determine current state

head "Reading application state"
read_current_state
show_current_state

if [ "$iojs_engine" == "" ]; then
  warn_node_engine "$node_engine"
else
  warn_node_engine "$iojs_engine"
fi
warn_node_modules "$modules_source"

####### Vendor in binaries

head "Installing binaries"
if [ "$iojs_engine" == "" ]; then
  install_node "$node_engine"
else
  install_iojs "$iojs_engine"
fi
install_npm

####### Install Bower

head "Installing bower which is required by other dependencies"
npm install bower --quiet --userconfig $build_dir/.npmrc 2>&1 | indent
PATH=$build_dir/node_modules/bower/bin:$PATH

####### Build the project's dependencies

head "Building dependencies"
cd $build_dir
build_dependencies

# Add the project's and ember-cli's dependencies' binaries to the PATH
PATH=$build_dir/node_modules/.bin:$PATH
PATH=$build_dir/node_modules/ember-cli/node_modules/.bin:$PATH

head "Pruning cached bower dependencies not specified in bower.json"
bower prune 2>&1 | indent

bower install --quiet | indent

head "Building Ember CLI application $build_env distribution"
$build_dir/node_modules/ember-cli/bin/ember build --environment $build_env | indent

cp $build_dir/dist $build_dir/api/public

####### Create a Procfile if possible

head "Checking startup method"
ensure_procfile "$start_method" "$build_dir"
warn_start "$start_method"

####### Finalize the build

head "Finalizing build"
write_profile
write_export
clean_npm
clean_cache
create_cache
build_succeeded
